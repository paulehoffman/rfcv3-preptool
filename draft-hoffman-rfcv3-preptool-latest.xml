<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.20 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<rfc ipr="trust200902" docName="draft-hoffman-rfcv3-preptool" category="info">

<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

  <front>
    <title>RFC v3 Prep Tool Description</title>

    <author initials="P." surname="Hoffman" fullname="Paul Hoffman">
      <organization>VPN Consortium</organization>
      <address>
        <email>paul.hoffman@vpnc.org</email>
      </address>
    </author>
    <author initials="J." surname="Hildebrand" fullname="Joe Hildebrand">
      <organization>Cisco</organization>
      <address>
        <email>jhildebr@cisco.com</email>
      </address>
    </author>

    <date year="2015" month="June" day="01"/>

    <area>Internet</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This short document describes some aspects of the “prep tool” that is expected
to be created when the new RFC v3 specification is deployed.
This draft is just a way to keep track of the ideas; it is not (currently)
expected to be published as an RFC.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>As a part of the new HTML format work, the RFC Editor has decided that the XML2RFCv3 vocabulary
<xref target="I-D.hoffman-xml2rfc"/> will be canonical, in the sense that it is the data that is blessed by the process as
the actual RFC. See <xref target="RFC6949"/> for more detail on this.</t>

<t>Most people will read other formats, such as HTML, PDF, ASCII text, or other formats of the future, however. 
In order to ensure each of these format is as similar as possible to one another as well as the canonical XML,
there is a desire for the translation from XML into the other formats will be straightforward syntactic
translation. To make that happen, a good amount of data will need to be in the XML format that is notthere today.
That data will be added by a program called the “prep tool”, which will often run as a part
of the xml2rfc process.</t>

<t>This draft specifies the steps that the prep tool will have to take.
As changes to <xref target="I-D.hoffman-xml2rfc"/> are made, this document will be updated.</t>

</section>
<section anchor="v3-prep-tool-usage-scenarios" title="v3 Prep Tool Usage Scenarios">

<t>The prep tool will have (at least) two settings:</t>

<t><list style="symbols">
  <t>Internet-Draft preparation</t>
  <t>Canonical RFC preparation</t>
</list></t>

<t>There are only a few difference between these two settings. For example, the
boilerplate output will be different, as will the date output on the front page.</t>

<t>Note that this only describes what the IETF-sponsored prep tool does. Others
might create their own work-alike prep tools for their own formatting needs.
However, an output format developer does not not need to change the prep tool in
order to create their own formatter: they only need to be able to consume
prepared text.</t>

<t>This tool is described as if it is a separate tool so that we can reason about
its architectural properties. In actual implementation, it might be a part of a
larger suite of functionality.</t>

</section>
<section anchor="internet-draft-submission" title="Internet-Draft Submission">

<t>When the IETF draft submission tool accepts v3 XML as an input format, the
submission tool runs the submitted file through the prep tool. If the tool finds
no errors, it keeps two XML files: the submitted file and the prepped file.</t>

<t>The prepped file provides a record of what a submitter was attesting to at the time of submission.
It represents a self-contained record of what any external references
resolved to at the time of submission.</t>

<t>The prepped file is used by the IETF
formatters to create outputs such as HTML, PDF, and text (or the tools act in a
way indistinguishable from this). The message sent out by the draft submission
tool includes a link to the original XML as well as the other outputs, including
the prepped XML.</t>

<t>The prepped XML can be used by tools not yet developed to output new formats
that have as similar output as possible to the current IETF formatters. For
example, if the IETF creates a .mobi output renderer later, it can run that renderer on
all of the prepped XML that has been saved, ensuring that the content of included
external references and all of the part numbers and boilerplate will be the same
as what was produced by the previous IETF formatters at the time the document
was first uploaded.</t>

</section>
<section anchor="canonical-rfc-preparation" title="Canonical RFC Preparation">

<t>During AUTH48, the RPC will run the prep tool in canonical RFC preparation mode
and make the results available to the authors so they can see what the final
output might look like. When the document is done with AUTH48 review, the RPC
runs the prep tool in canonical RFC preparation mode one last time, locks down
the canonicalized XML, runs the formatters for the non-canonical output, and
publishes all of those. It is probably a good idea for the RPC to keep a copy of
the input XML file from the various steps of the RFC production process.</t>

<t>Similarly to I-D’s, the prepped XML can be used later to re-render the output
formats, or to generate new formats.</t>

</section>
<section anchor="what-the-v3-prep-tool-does" title="What the v3 Prep Tool Does">

<t>The steps listed here are in order of processing.
In all cases where the prep tool would “add” an attribute or element, if that attribute or element already
exists, the prep tool will replace it, and if the values are different, will warn the user with a message that
has the old and new values.</t>

<t><list style="numbers">
  <t>Process all &lt;x:include&gt; elements. Note: &lt;x:include&gt;d XML may include more
&lt;x:include&gt;s (with relative URLs rooted at the xml:base), so set a limit on the
depth of recursion.</t>
  <t>If in RFC production mode, remove comments.</t>
  <t>Add the boilerplate text with current values.
However, if different boilerplate text already exists in the input, produce a scary warning
that says that other tools, specifically the draft submission tool, will treat that condition as an error.</t>
  <t>Fill in the “prepTime” attribute of &lt;rfc&gt; with the current datetime.</t>
  <t>If in I-D mode, fill in “expiresDate” attribute of &lt;rfc&gt;.</t>
  <t>Fill in any default values for attributes on elements, except “keepWithNext” and
“keepWithPrevious” of &lt;t&gt;, and “toc” of &lt;section&gt;.</t>
  <t>If the &lt;workgroup&gt; content doesn’t end with “Group”, issue a warning.</t>
  <t>Add a “slugifiedName” attribute to each &lt;name&gt; element that does not contain a valid one
(all values must be valid HTML id’s, and all start with with “n-“).</t>
  <t>Add “pn” attributes for all parts.  Parts are:
  <list style="symbols">
      <t>&lt;section&gt;: pn=’s-1.4.2’</t>
      <t>except &lt;abstract&gt;, which gets pn=’s-abstract’</t>
      <t>except &lt;note&gt;, which gets pn=’s-note-[counter]’</t>
      <t>&lt;table&gt;: pn=’t-3’</t>
      <t>&lt;figure&gt;: pn=’f-4’</t>
      <t>(&lt;abstract&gt;, &lt;note&gt;, &lt;t&gt;, &lt;aside&gt;, &lt;blockquote&gt;,
  &lt;li&gt;, &lt;dt&gt;, &lt;artwork&gt;, &lt;sourcecode&gt;, &lt;references&gt;):
  pn=’p-[section]-[counter]’</t>
    </list></t>
  <t>Add a “start” attribute to every &lt;ol&gt; element containing a group that doesn’t already have a start.</t>
  <t>Sort the references, if “sortRefs” of &lt;rfc&gt; is true.</t>
  <t>Resolve all &lt;xref&gt; elements. Ensure that each target is valid.
Invent text for each element that doesn’t have it.
(More steps will be added here when the community has agreement on *ref.)</t>
</list></t>

<!--
- if the schema doesn't adequately protect, error if both section and relative don't exist
- warn if derivedRemoteContent exists?
- error if <relref> contains both text and derivedRemoteContent
- fill in derivedLink on all <relref> elements
- fill in derivedRemoteContent on <relref> elements that do not contain text
- try to fetch the derived URI if it knows the protocol scheme (warning if it doesn't), and warn (or error?) if the doc doesn't exist.
-->

<t><list style="numbers">
  <t>Process &lt;artwork&gt; elements.
If an element has type=’svg’, and if there is a “src” attribute, inline and remove the “src”
attribute, and insert “xml:base” attribute; also check SVG schema against our TinySVG profile.
Otherwise, if the “src” attribute is not a “data:” URI, turn it into a “data:”
URI and insert “xml:base” attribute.</t>
  <t>Add a &lt;link&gt; child element to &lt;rfc&gt; for the DOI, if in RFC production mode.</t>
  <t>Determine all the characters used in the document, and fill in “scripts” attribute for &lt;rfc&gt;.</t>
  <t>Ensure that the output has the “version” attribute of &lt;rfc&gt;, and that it is set to “3”.</t>
  <t>Pretty-format the XML output.  (Note: tools like <eref target="https://github.com/hildjj/dentin">https://github.com/hildjj/dentin</eref> do an adequate job.)</t>
  <t>Ensure that the result is in full compliance to v3 schema, without any deprecated
elements or attributes, and give an error if any issues are found.</t>
</list></t>

</section>
<section anchor="ianacons" title="IANA Considerations">

<t>None.</t>

</section>
<section anchor="securitycons" title="Security Considerations">

<t>None.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Many people contributed valuable ideas to this document. Special thanks go to
Robert Sparks for his in-depth review and contributions early in the
development of this document.</t>

</section>


  </middle>

  <back>


    <references title='Informative References'>





<reference anchor='RFC6949'>

<front>
<title>RFC Series Format Requirements and Future Development</title>
<author initials='H.' surname='Flanagan' fullname='H. Flanagan'>
<organization /></author>
<author initials='N.' surname='Brownlee' fullname='N. Brownlee'>
<organization /></author>
<date year='2013' month='May' />
<abstract>
<t>This document describes the current requirements and requests for enhancements for the format of the canonical version of RFCs.  Terms are defined to help clarify exactly which stages of document production are under discussion for format changes.  The requirements described in this document will determine what changes will be made to RFC format.  This document updates RFC 2223.</t></abstract></front>

<seriesInfo name='RFC' value='6949' />
<format type='TXT' octets='29181' target='http://www.rfc-editor.org/rfc/rfc6949.txt' />
</reference>



<reference anchor='I-D.hoffman-xml2rfc'>
<front>
<title>The 'XML2RFC' version 3 Vocabulary</title>

<author initials='P' surname='Hoffman' fullname='Paul Hoffman'>
    <organization />
</author>

<date month='May' day='26' year='2015' />

<abstract><t>This document defines the "XML2RFC" version 3 vocabulary; an XML- based language used for writing RFCs and Internet-Drafts.  It is heavily derived from the version 2 vocabulary that is also under discussion.  This document obsoletes the v2 grammar described in RFC 2629 and its expected followup, draft-iab-xml2rfc.  Editorial Note (To be removed by RFC Editor)  Discussion of this draft takes place on the rfc-interest mailing list (rfc-interest@rfc-editor.org), which has its home page at &lt;https://www.rfc-editor.org/mailman/listinfo/rfc-interest>.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-hoffman-xml2rfc-18' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-hoffman-xml2rfc-18.txt' />
</reference>




    </references>



  </back>
</rfc>

